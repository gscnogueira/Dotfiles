(setq inhibit-splash-screen t) ;; Don't show startup message
(scroll-bar-mode -1)  ;; Disable visible scrollbar
(tool-bar-mode -1)    ;; Disable the toolbar
(tooltip-mode -1)     ;; Disable tooltips
(set-fringe-mode 10)  ;; Give some breathing room

(menu-bar-mode -1)    ;; Disable the menu bar

;; Set up the visual bell
;;(setq visible-bell t)

;; font
(set-face-attribute 'default nil :font "JetBrains Mono" :height 105 :weight 'normal)

;; Make ESC quit prompts
(global-set-key (kbd "<escape>") 'keyboard-escape-quit)

;; Initialize package sources
(require 'package)

(setq package-archives '(("melpa" . "https://melpa.org/packages/")
			 ("org" . "https://orgmode.org/elpa/")
			 ("elpa" . "https://elpa.gnu.org/packages/")))
(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))

(unless (package-installed-p 'use-package)
  (package-install 'use-package))
(require 'use-package)
(setq use-package-always-ensure t)

(column-number-mode) ;; show column number in the mode-line
(global-display-line-numbers-mode t) ;; enable line numbers
;; 
;; Disable line numbers for some modes
(dolist (mode '(org-mode-hook
		shell-mode-hook
		eshell-mode-hook))
  (add-hook mode (lambda() (display-line-numbers-mode 0))))

(use-package ivy
  :diminish ;; dont show minor mode in the bar
  :init (ivy-mode 1)
  :bind (;;("C-s" . swiper) ;; have to install swiper
	 :map ivy-minibuffer-map
	 ("TAB" . ivy-alt-done)
	 ("C-l" . ivy-alt-done)
	 ("C-j" . ivy-next-line)
	 ("C-k" . ivy-previous-line)
	 :map ivy-switch-buffer-map
	 ("C-k" . ivy-previous-line)
	 ("C-l" . ivy-done)
	 ("C-d" . ivy-switch-buffer-kill)
	 :map ivy-reverse-i-search-map
	 ("C-k" . ivy-previous-line)
	 ("C-d" . ivy-reverse-i-search-kill)))

(use-package all-the-icons)

(use-package doom-modeline
  :init (doom-modeline-mode 1))

(use-package doom-themes
  :init (load-theme 'doom-nord t))

(use-package rainbow-delimiters
  :hook (prog-mode . rainbow-delimiters-mode))

(use-package which-key
  :init (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 0.3))

;; "M-o" mostra opções no prompt
(use-package counsel
  :bind (("M-x" . counsel-M-x)
	 ("C-x b" . counsel-ibuffer)
	 ("C-x C-f" . counsel-find-file)
	 ("C-M-j" . counsel-switch-buffer)
	 :map minibuffer-local-map
	 ("C-r" . counsel-minibuffer-history))
  :config
  (setq ivy-initial-inputs-alist nil)) ;; Don't start searches with ^

;; Shows informations about functions through ivy
(use-package ivy-rich
  :init
  (ivy-rich-mode 1))

(use-package helpful
  :custom
  (counsel-describe-function-function #'helpful-callable)
  (counsel-describe-variable-function #'helpful-variable)
  :bind
  ([remap describe-function] . counsel-describe-function)
  ([remap describe-command] . helpful-command)
  ([remap describe-variable] . counsel-describe-variable)
  ([remap describe-key] . helpful-key))


(use-package general)

;; Example
;;(general-define-key
;; "C-M-j" counsel-switch-buffer)

(defun gscn/evil-hook ()
  (dolist 
(use-package evil
  :init
  (setq evil-want-integration t)
  (setq evil-want-keybiding   nil)
  (setq evil-want-C-u-scroll t)
  (evil-mode 1)
 :hook )



(defun gscn/org-mode-setup()
  (org-indent-mode)
  (visual-line-mode 1))

(use-package org
  :hook ((org-mode . gscn/org-mode-setup)
	 (org-mode . org-toggle-pretty-entities))
  :config
  (setq org-ellipsis " ▾"
	org-hide-emphasis-markes t))

(use-package org-bullets
  :after org
  :hook (org-mode . org-bullets-mode))

;; example of how to define a key for an expecific mode
;;(define-key emacs-lisp-mode-map (kbd "C-x M-t") 'counsel-load-theme)
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(counsel-mode t)
 '(ivy-rich-mode t)
 '(package-selected-packages
   '(evil general org-bullets doom-themes helpful counsel ivy-rich which-key use-package rainbow-delimiters ivy doom-modeline)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
